import tensorflow as tf
import numpy as np
from tensorflow.keras.preprocessing import image
from tensorflow.keras.models import load_model

# Load the trained model
model = load_model('malware_cnn_model.keras')

# Function to predict malware class
def predict_malware(image_path, class_indices):
    # Load and preprocess the image
    img = image.load_img(image_path, target_size=(256, 256), color_mode='grayscale')
    img_array = image.img_to_array(img) / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    # Predict
    prediction = model.predict(img_array)
    predicted_class = np.argmax(prediction)

    # Get class labels dynamically from model
    class_names = {v: k for k, v in class_indices.items()}  # Reverse dictionary
    return class_names.get(predicted_class, f"Class {predicted_class}")

# Example usage
class_indices = {
    'Adialer.C': 0, 'Agent.FYI': 1, 'Allaple.A': 2, 'Allaple.L': 3, 'Alueron.gen!J': 4, 'Autorun.K': 5, 'C2LOP.P': 6, 'C2LOP.gen!g': 7, 'Dialplatform.B': 8, 'Dontovo.A': 9, 'Fakerean': 10, 'Instantaccess': 11, 'Lolyda.AA1': 12, 'Lolyda.AA2': 13, 'Lolyda.AA3': 14, 'Lolyda.AT': 15, 'Malex.gen!J': 16, 'Obfuscator.AD': 17, 'Rbot!gen': 18, 'Skintrim.N': 19, 'Swizzor.gen!E': 20, 'Swizzor.gen!I': 21, 'VB.AT': 22, 'Wintrim.BX': 23, 'Yuner.A': 24
}

image_path = r"C:\Users\Faris\Desktop\FAAIZ\CODING\Coding Work\PYTHON\MalwareClassification\Dataset\test\Adialer.C\06dec815e8fc323f9b0ec2e49d55ba4f.png"
result = predict_malware(image_path, class_indices)
print(f"The malware belongs to the family: {result}")
