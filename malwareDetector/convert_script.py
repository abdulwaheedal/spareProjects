import numpy as np
from PIL import Image
import os
import math

def convert_to_image(file_path, save_path, dim=(256, 256)):
    # Read binary file
    with open(file_path, 'rb') as f:
        binary_data = f.read()
    
    # Convert to numpy array
    data = np.frombuffer(binary_data, dtype=np.uint8)
    
    # Compute width using ceiling so that width*width >= len(data)
    width = math.ceil(math.sqrt(len(data)))
    
    # If data length is less than width*width, pad the array with zeros
    if len(data) < width*width:
        pad_length = width*width - len(data)
        data = np.pad(data, (0, pad_length), mode='constant', constant_values=0)
    
    image_array = data.reshape(width, width)
    
    # Resize and save
    img = Image.fromarray(image_array).resize(dim)
    img.convert('L').save(save_path)

def batch_convert(input_dir, output_dir):
    for family in os.listdir(input_dir):
        family_path = os.path.join(input_dir, family)
        if os.path.isdir(family_path):
            os.makedirs(os.path.join(output_dir, family), exist_ok=True)
            for i, sample in enumerate(os.listdir(family_path)):
                input_path = os.path.join(family_path, sample)
                output_path = os.path.join(output_dir, family, f"{family}_{i}.png")
                convert_to_image(input_path, output_path)

# Convert both train and test sets
batch_convert("dataset/train", "dataset_images/train")
batch_convert("dataset/test", "dataset_images/test")
